{
  "hash": "d71753999a145fd16e56b950c0452609",
  "result": {
    "markdown": "---\ntitle: \"Activity\"\nauthor: \"Diego J. Lizcano, Alejandra Bonilla\"\ndate: \"2023-02-22\"\noutput: html_document\n---\n\n\n\n\n# cargar paquetes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # maneja datos\nlibrary(mapview) # mapas facil\nlibrary(readxl) # leer datos\nlibrary(lubridate) # fix dates\nlibrary(sf) # make vector maps\nlibrary(camtrapR) # to get activity graph\nlibrary(raster) # to get some geographical data and use extent\nlibrary(tmap) # make nice raster maps\nlibrary(tmaptools) # to use the read_osm function \nlibrary(OpenStreetMap) # get tiles from OSM\nlibrary(GADMTools) # to get deptos\nlibrary(grid) # print options  \n\nsource(\"D:/BoxFiles/Box Sync/CodigoR/tigrinus/R/organizadato.R\")\n```\n:::\n\n\n# cargar datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHuila_data <-  read_delim(\"D:/BoxFiles/Box Sync/CodigoR/tigrinus/data/huila_merged.csv\", \n delim = \";\", escape_double = FALSE, col_types = cols(camera_trap_start_date = col_character()), trim_ws = TRUE)\n```\n:::\n\n\n# mapa casas\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##### read SHP ####\n# casas <- st_read(\"D:/BoxFiles/Box Sync/CodigoR/tigrinus/data/Casas_1-point.shp\")\n# casas <- read_csv(\"D:/BoxFiles/Box Sync/CodigoR/tigrinus/data/casas.csv\")\n# casas_shp <- st_as_sf(casas, coords = c(\"lon\", \"lat\"), crs = \"EPSG:4326\")\n\n# st_write(casas_shp, \"D:/BoxFiles/Box Sync/CodigoR/tigrinus/data/casas.shp\")\n# casas_cocha <- matrix (c(-0.98924, -77.15632,\n#   -0.96788, -77.15383,\n#   -0.97283, -77.16010,\n#    1.01544, -77.17456,\n#    1.01326, -77.17977,\n#    1.02510, -77.17050,\n#    1.02753, -77.16778,\n#    1.03276, -77.16458,\n#    1.03726, -77.16038,\n#    1.04351, -77.16407,\n#    1.05096, -77.15198,\n#    1.05954, -77.14333,\n#    1.06092, -77.13724,\n#    1.06301, -77.12153,\n#    1.05785, -77.11739,\n#    1.01819, -77.12116,\n#    1.01184, -77.09363),\n#    nrow = 17, ncol = 2, byrow = TRUE )\n\n\ncasas_shp <- read_sf(\"D:/BoxFiles/Box Sync/CodigoR/tigrinus/data/casas.shp\")\n```\n:::\n\n\n# Crerar matrices para unmarked\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### Fix tables to use the function f.matrix.creator2 \n\nHuila_data$binomial <- Huila_data$\"Genus Species\" #str_c (Huila_data$Genus, \"_\", Huila_data$Species)\n\n# fix Huila_data\n# fix dates \nHuila_data$camera_trap_start_date <- ymd(Huila_data$camera_trap_start_date)\nHuila_data$camera_trap_end_date <- ymd(Huila_data$camera_trap_end_date)\n\n#fix cams\nHuila_data$camera_trap <- Huila_data$\"Depolyment Location ID\"\n# fix photo date\nHuila_data$Photo_Date <- Huila_data$\"Date_Time Captured\" \n\n#### make sf object\ndatos.raw_sf <- st_as_sf(Huila_data, coords = c(\"Longitude Resolution\", \"Latitude Resolution\"), crs = \"EPSG:4326\")\n\ncamaras <-  datos.raw_sf # st_transform (datos.raw_sf, \"+proj=longlat +ellps=GRS80 +no_defs\") \n# camaras_16 <- camaras %>% filter (Year ==\"2016\" ) # & Year <=\"2017\")\n# camaras_17 <- camaras %>% filter (Year ==\"2017\" ) # & Year <=\"2017\")\n\n# Add column to get activity graph using activityDensity from camtrapR\n# Add column to get activity graph using activityDensity from camtrapR\ncamaras$fecha <- as.POSIXlt(datos.raw_sf$\"Date_Time Captured\", format=\"%Y/%m/%d %H:%M:%S\")\n# add species name column to us the function activityDensity\n\n\ncamaras$DateTimeOriginal <- as.character(as.POSIXlt(Huila_data$\"Date_Time Captured\", format=\"%d/%m/%Y %H:%M:%S\")) # as.character(camaras$DateRecord)\n# camaras_17$DateTimeOriginal <- as.character(camaras_17$DateRecord)\ncamaras$Species <- camaras$binomial\n\n\n#funcion para crear todas las tablas de datos\nall_data <-  f.matrix.creator2 (Huila_data)\n(sp.names <- names(all_data)) # ver lass especies y en que lista esta cada una\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] NA                            \"Dasyprocta punctata\"        \n [3] \"Dasypus novemcinctus\"        \"Cuniculus paca\"             \n [5] \"Penelope unknown\"            \"Leopardus tigrinus\"         \n [7] \"Tinamus unknown\"             \"Arremon brunneinucha\"       \n [9] \"Tapirus pinchaque\"           \"Eira barbara\"               \n[11] \"Nasuella olivacea\"           \"Sciurus unknown\"            \n[13] \"Tinamus osgoodi\"             \"Geotrygon frenata\"          \n[15] \"Didelphis pernigra\"          \"Buteo swainsoni\"            \n[17] \"Turdus unknown\"              \"Penelope montagnii\"         \n[19] \"Puma concolor\"               \"Aulacorhynchus prasinus\"    \n[21] \"Mazama rufina\"               \"Nothocercus bonapartei\"     \n[23] \"Chamaepetes goudotii\"        \"Microsciurus unknown\"       \n[25] \"Conepatus semistriatus\"      \"Mustela frenata\"            \n[27] \"Leopardus wiedii\"            \"Leopardus unknown\"          \n[29] \"Momotus unknown\"             \"Odontophorus hyperythrus\"   \n[31] \"Pardirallus nigricans\"       \"Grallaria unknown\"          \n[33] \"Turdus fulviventris\"         \"Didelphis unknown\"          \n[35] \"Tremarctos ornatus\"          \"Campephilus pollens\"        \n[37] \"Odontophorus unknown\"        \"Grallaria ruficapilla\"      \n[39] \"Ochthoeca cinnamomeiventris\" \"Arremon unknown\"            \n[41] \"Grallaria gigantea\"          \"Grallaricula flavirostris\"  \n[43] \"Canis lupus familiaris\"      \"Leopardus pardalis\"         \n[45] \"Geotrygon unknown\"           \"Margarornis stellatus\"      \n[47] \"Momotus momota\"              \"Grallaricula nana\"          \n[49] \"Atlapetes leucopis\"         \n```\n:::\n\n```{.r .cell-code}\n# Tigrinus es lista 6\n```\n:::\n\n\n### Actividad del tigrillo y perro\n\n\n::: {.cell}\n\n```{.r .cell-code}\nactivityOverlap (recordTable = camaras,\n                 speciesA    = \"Leopardus tigrinus\",\n                 speciesB    = \"Canis lupus familiaris\",\n                 writePNG    = FALSE,\n                 plotR       = TRUE,\n                 addLegend = FALSE,\n                 legendPosition = \"topleft\",\n                 createDir   = FALSE,\n                 pngMaxPix   = 1000,\n                 linecol     = c(\"red\", \"blue\"),\n                 linewidth   = c(1,1),\n                 linetype    = c(1, 2),\n                 olapcol     = \"darkgrey\",\n                 add.rug     = TRUE,\n                 extend      = \"lightgrey\",\n                 ylim        = c(0, 0.25),\n                 main        = paste(\"Activity overlap \", \n                                     \"Leopardus tigrinus (red)\" , \"and\", \n                                     \"domestic dog (blue)\") )\nrect(0, 0, 6, 0.5, col= rgb(0.211,0.211,0.211, alpha=0.2), border = \"transparent\")\nrect(18, 0, 24, 0.5, col= rgb(0.211,0.211,0.211, alpha=0.2), border = \"transparent\")\n```\n\n::: {.cell-output-display}\n![](Activity_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# save tigrinus only to hard disk.\n## turn on graphics device \npng(file = \"D:/BoxFiles/Box Sync/CodigoR/tigrinus/fig/tigrinus_activity2.png\", width = 1200, height = 700, res = 150)\npar(mar = c(5, 4, 3, 3) + 0.1)\nactivityDensity (recordTable = camaras,\n                 species     = as.character(sp.names[sp_number=6]))\nrect(0, 0, 6, 0.5, col= rgb(0.211,0.211,0.211, alpha=0.2), border = \"transparent\")\nrect(18, 0, 24, 0.5, col= rgb(0.211,0.211,0.211, alpha=0.2), border = \"transparent\")\n##turn off graphics device\ndev.off( )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\npng \n  2 \n```\n:::\n:::\n\n\n### Mapa del tigrinus (rojo) y el perro (azul)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntigrinus <- filter(camaras, Species==\"Leopardus tigrinus\")\nby_sp <- camaras %>%  group_by(Species) %>% tally()\nby_sp_tigrinus <- tigrinus %>%  group_by(\"Depolyment Location ID\") %>% tally()\nnames(by_sp_tigrinus) <-  c(\"Predio\", \"Fotos tigrinus\", \"geometry\")\n\ndog <- filter(camaras, Species==\"Canis lupus familiaris\")\nby_sp <- camaras %>%  group_by(Species) %>% tally()\nby_sp_dog <- dog %>%  group_by(\"Depolyment Location ID\") %>% tally()\nnames(by_sp_dog) <-  c(\"Predio\", \"Fotos Dog\", \"geometry\")\n\n\n\ncolombia <-  gadm_sf_loadCountries(\"COL\", level=1, basefile=\"./\")\ncollimit <- gadm_sf_loadCountries(\"COL\", level=0, basefile=\"./\")\n\ndeptos <- gadm_subset(colombia, regions=c(\"Huila\", \"Cauca\"))\n\n# get the extent of cameras\nventana <- bb(camaras, ext=2) # ext=2 increase window by 2\n\nHuila_osm1 <- tmaptools::read_osm(ventana, type=\"stamen-terrain\",  mergeTiles = TRUE)\n\n\n########## figure 1\ndata_box <- ventana # st_as_sfc(st_bbox(cams_loc_QR_sf)) #bounding box\n\n# pal = mapviewPalette(\"mapviewTopoColors\")\n# get fondo de osm\nandes_osm1 <- read_osm(ventana, zoom = NULL, type=\"stamen-terrain\", mergeTiles = TRUE) # type puede ser tambien bing, osm # type puede ser tambien bing, osm\ncolombia <-  gadm_sf_loadCountries(\"COL\", level=1, basefile=\"./\")\ncollimit <- gadm_sf_loadCountries(\"COL\", level=0, basefile=\"./\")\n\ndeptos <- gadm_subset(colombia, regions=c(\"Huila\", \"Cauca\"))\n\n\ndepto_window <- qtm(andes_osm1)  + \n  tm_shape(camaras) + \n  tm_dots(col = \"black\", size = 0.25, \n          shape = 16, title = \"Sampling point\", legend.show = TRUE,\n          legend.is.portrait = TRUE,\n          legend.z = NA) + \n  tm_shape(by_sp_tigrinus) +  tm_symbols (col=\"red\", size = 0.25) + \n  tm_shape(by_sp_dog) +  tm_symbols (col=\"blue\", size = 0.15) + \n  tm_layout(scale = .9) +\n  # legend.position = c(.78,.72), \n  # legend.outside.size = 0.1,\n  # legend.title.size = 1.6,\n  # legend.height = 0.9,\n  # legend.width = 1.5,\n  # legend.text.size = 1.2) + \n  # legend.hist.size = 0.5) + \n  tm_legend(position = c(\"left\", \"bottom\"), frame = TRUE,\n            bg.color=\"white\") + \n  tm_layout(frame=F) + tm_scale_bar() + tm_compass(position = c(.75, .82), color.light = \"grey90\") \n\ndep_map <-  tm_shape(deptos$sf) + tm_polygons() +\n  tm_shape(camaras) + tm_symbols(shape = 0, col = \"red\", size = 0.25)\ncol_map <- tm_shape(collimit$sf) + tm_polygons() + tm_shape(deptos$sf) + tm_polygons()\n\n##### print all\ndepto_window\nprint(dep_map, vp = viewport(0.73, 0.40, width = 0.25, height = 0.25))\nprint(col_map, vp = viewport(0.73, 0.65, width = 0.25, height = 0.25))\n```\n\n::: {.cell-output-display}\n![](Activity_files/figure-html/mapa_sps1-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Activity_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}